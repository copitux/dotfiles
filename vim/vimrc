" Globals and plugins
source ~/.vim/bundles.vim

set statusline=%f\ %2*%m\ %1*%h%r%=[%{&encoding}\ %{&fileformat}\ %{strlen(&ft)?&ft:'none'}\ %{getfperm(@%)}]\ 0x%B\ %12.(%c:%l/%L%)
set statusline+='%<\ %f\ %{fugitive#statusline()}'
set laststatus=2
set ruler
set ts=4 et sw=4 sts=4
set hlsearch
set incsearch
set cpoptions+=$
set wildmenu
set encoding=utf-8
set backupdir=$HOME/.vim/bakup

" view trainling whitespaces and tabs
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.,eol:Â¬
" disable some for html
autocmd filetype html,xml set listchars-=tab:>.

"Python
au FileType python set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
au FileType python set ts=4 et sw=4 sts=4
au FileType python normal m`:%s/\s\+$//e``
au BufNewFile *.py so $HOME/.vim/file_headers/py_header.txt "TODO: why buf and not file?

"Django
au FileType htmldjango set ft=htmldjango.html "ts=2 et sw=2 sts=2
au FileType python set ft=python.django "ts=2 et sw=2 sts=2

" Surround mapping (https://code.djangoproject.com/wiki/UsingVimWithDjango#SurroundMappings)
let g:surround_{char2nr("b")} = "{% block\1 \r..*\r &\1%}\r{% endblock %}"
let g:surround_{char2nr("i")} = "{% if\1 \r..*\r &\1%}\r{% endif %}"
let g:surround_{char2nr("w")} = "{% with\1 \r..*\r &\1%}\r{% endwith %}"
let g:surround_{char2nr("c")} = "{% comment\1 \r..*\r &\1%}\r{% endcomment %}"
let g:surround_{char2nr("f")} = "{% for\1 \r..*\r &\1%}\r{% endfor %}"

" Colors
syntax on
set background=dark
colorscheme desert 

if has('gui_running')
    set guifont=Inconsolata\ 11
    if has('mac')
        set guifont=Monaco:h14
    endif
    set lines=45 columns=174
    set guioptions-=T
    set guioptions-=m
    set guioptions-=L
    set guioptions-=r
endif

" Alias
nnoremap j gj
nnoremap k gk
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
